{"name":"Paypal-payments","tagline":"Accept and process payments with Paypal SDK","body":"### Introduction to Paypal payments plugin.\r\nThe Paypal payments plugin simplifies the integration of Paypal into Grails applications. With this plugin, you are not required to be a Paypal sdk guru in order to accept payments.\r\n\r\nThis guide documents how to use the paypal payments plugin to process payments for Grails Applications. \r\n\r\n### Getting Started\r\nI will assume that you already have your Grails application designed and ready to accept payments. A demo application will be sufficient for this exercise.  \r\n\r\n####Create a paypal account\r\nYou will need to create a paypal account and obtain API keys for a Paypal app. The Paypal app will represent your Grails application. To create a paypal app, please visit [https://developer.paypal.com/developer/applications/](Paypal developer page) to create a sandbox account. \r\n\r\nThe Sandbox account will allow you to play around with most of the API features available. It is also a good way to test your application integration before moving over to a live environment. \r\n\r\n####Obtain your client id and client secret\r\nObtain the API keys for your sandbox account/app and add it to your grails config file [Config.groovy for grails 2.x and application.groovy for grails 3.x]. Here's what my config file looks like: \r\n`paypal.email=\"omasiri@novadge.com\"\r\npaypal.clientId = 'your client id'\r\npaypal.sandbox.clientId = 'your client id'\r\npaypal.clientSecret = 'your client secret'\r\npaypal.sandbox.clientSecret ='your client secret'\r\npaypal.endpoint = \"https://api.paypal.com\"\r\npaypal.sandbox.endpoint = \"https://api.sandbox.paypal.com\"\r\n`\r\nNotice that I added config for sandbox and live environment. The reason is to be able to switch between both environments  during app development. \r\n\r\n####Create a grails controller and add required actions\r\nCreate a grails controller. Personally, I called my own controller PaypalController.\r\n`\r\ngrails create-controller com.mypackage.Paypal\r\n`\r\n\r\n####Add required actions\r\n\r\nWe’ve crafted some handsome templates for you to use. Go ahead and click 'Continue to layouts' to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved.\r\n\r\n### Creating pages manually\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}